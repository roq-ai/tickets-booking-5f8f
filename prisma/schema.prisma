generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  booking_date DateTime @db.Timestamp(6)
  user_id      String   @db.Uuid
  ticket_id    String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  ticket       ticket   @relation(fields: [ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model provider {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket      ticket[]
}

model team_member {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String   @db.VarChar(255)
  contact_number String   @db.VarChar(255)
  position       String   @db.VarChar(255)
  user_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ticket {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ticket_type    String    @db.VarChar(255)
  price          Int
  departure_time DateTime  @db.Timestamp(6)
  arrival_time   DateTime  @db.Timestamp(6)
  origin         String    @db.VarChar(255)
  destination    String    @db.VarChar(255)
  provider_id    String    @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  booking        booking[]
  provider       provider  @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model travel_agent {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String   @db.VarChar(255)
  contact_number String   @db.VarChar(255)
  address        String   @db.VarChar(255)
  user_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  booking      booking[]
  provider     provider[]
  team_member  team_member[]
  travel_agent travel_agent[]
}
